import { Req, Res, Next } from "../../framework/types/serverPackageType";
import { IuserUseCase } from "../../usecases/interface/usecase/userUseCase";
import { CustomRequest } from "../../framework/webServer/middleware/request/customReq";
export declare class UserController {
    private userUseCase;
    constructor(userUseCase: IuserUseCase);
    userSignup(req: Req, res: Res, next: Next): Promise<void>;
    createUser(req: Req, res: Res, next: Next): Promise<void>;
    resentOtp(req: Req, res: Res, next: Next): Promise<void>;
    login(req: Req, res: Res, next: Next): Promise<void>;
    forgotPassword(req: Req, res: Res, next: Next): Promise<void>;
    resetPassword(req: Req, res: Res, next: Next): Promise<void>;
    getUsers(req: CustomRequest, res: Res, next: Next): Promise<void>;
    googleLogin(req: Req, res: Res, next: Next): Promise<void>;
    changePassword(req: CustomRequest, res: Res, next: Next): Promise<void>;
    createProfile(req: Req, res: Res, next: Next): Promise<void>;
    verifyRequest(req: CustomRequest, res: Res, next: Next): Promise<void>;
    uploadCoverimage(req: CustomRequest, res: Res, next: Next): Promise<void>;
    getProfileImage(req: CustomRequest, res: Res, next: Next): Promise<void>;
    changePrivacy(req: CustomRequest, res: Res, next: Next): Promise<void>;
    showNotification(req: CustomRequest, res: Res, next: Next): Promise<void>;
    getUserDetails(req: Req, res: Res, next: Next): Promise<void>;
    userFollowUp(req: Req, res: Res, next: Next): Promise<void>;
    getMyFollowings(req: CustomRequest, res: Res, next: Next): Promise<void>;
    myFollowers(req: CustomRequest, res: Res, next: Next): Promise<void>;
    unFollow(req: Req, res: Res, next: Next): Promise<void>;
    removeFollower(req: CustomRequest, res: Res, next: Next): Promise<void>;
    followback(req: CustomRequest, res: Res, next: Next): Promise<void>;
    uploadPost(req: CustomRequest, res: Res, next: Next): Promise<void>;
    uploadThoughts(req: CustomRequest, res: Res, next: Next): Promise<void>;
    fetchPosts(req: CustomRequest, res: Res, next: Next): Promise<void>;
    deletePost(req: Req, res: Res, next: Next): Promise<void>;
    postView(req: Req, res: Res, next: Next): Promise<void>;
    editPost(req: Req, res: Res, next: Next): Promise<void>;
    postLike(req: CustomRequest, res: Res, next: Next): Promise<void>;
    addComment(req: CustomRequest, res: Res, next: Next): Promise<void>;
    deleteComment(req: Req, res: Res, next: Next): Promise<void>;
    editingComment(req: CustomRequest, res: Res, next: Next): Promise<void>;
    fetchMyPosts(req: CustomRequest, res: Res, next: Next): Promise<void>;
    fetchOtherFollowers(req: CustomRequest, res: Res, next: Next): Promise<void>;
    fetchOtherFollowings(req: CustomRequest, res: Res, next: Next): Promise<void>;
    fetchOthersPosts(req: Req, res: Res, next: Next): Promise<void>;
    searchUsers(req: Req, res: Res, next: Next): Promise<void | Res>;
    userLogout(req: Req, res: Res, next: Next): Promise<void>;
    reportPost(req: CustomRequest, res: Res, next: Next): Promise<void>;
}
